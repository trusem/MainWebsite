---
const plans = [
    {
        name: "Starter",
        price: "$49",
        period: "per month",
        description: "Perfect for small businesses getting started with marketing.",
        features: [
            "Basic marketing automation",
            "Up to 1,000 contacts",
            "Email support",
            "Basic analytics",
            "3 team members",
            "1 marketing campaign"
        ],
        cta: "Get started",
        highlighted: false
    },
    {
        name: "Professional",
        price: "$99",
        period: "per month",
        description: "For growing businesses ready to scale their marketing.",
        features: [
            "Advanced marketing automation",
            "Up to 10,000 contacts",
            "Priority email & chat support",
            "Advanced analytics & reporting",
            "10 team members",
            "5 marketing campaigns",
            "Custom integrations"
        ],
        cta: "Start free trial",
        highlighted: true
    },
    {
        name: "Enterprise",
        price: "$199",
        period: "per month",
        description: "Custom solutions for large organizations.",
        features: [
            "Custom marketing automation",
            "Unlimited contacts",
            "24/7 phone & priority support",
            "Custom analytics & reporting",
            "Unlimited team members",
            "Unlimited marketing campaigns",
            "Custom development",
            "Dedicated account manager"
        ],
        cta: "Contact sales",
        highlighted: false
    }
];
---

<section class="py-24 bg-white">
    <div class="mx-auto max-w-7xl px-6 lg:px-8">
        <div class="mx-auto max-w-4xl text-center">
            <h2 class="text-base font-semibold leading-7 text-indigo-600">Pricing</h2>
            <p class="mt-2 text-4xl font-display tracking-tight text-gray-900 sm:text-5xl">
                Choose the right plan for your business
            </p>
        </div>
        <p class="mx-auto mt-6 max-w-2xl text-center text-lg leading-8 text-gray-600">
            Start with a 14-day free trial. No credit card required.
        </p>

        <div class="mx-auto mt-16 grid max-w-lg grid-cols-1 gap-y-6 sm:mt-20 sm:gap-y-0 sm:gap-x-8 lg:max-w-none lg:grid-cols-3" id="pricing">
            {plans.map((plan) => (
                <div 
                    class={`pricing-plan cursor-pointer relative rounded-3xl p-8 ring-1 transition-all duration-300 
                    ${plan.highlighted ? 'bg-gray-900 ring-gray-900' : 'ring-gray-200 hover:ring-gray-300'}`}
                    data-highlighted={plan.highlighted}
                >
                    <div class="flex h-full flex-col justify-between">
                        <div>
                            <h3 class={`font-display text-2xl font-semibold leading-7 ${plan.highlighted ? 'text-white' : 'text-gray-900'}`}>
                                {plan.name}
                            </h3>
                            <div class="mt-6 flex items-baseline gap-x-1">
                                <span class={`font-display text-4xl font-bold tracking-tight ${plan.highlighted ? 'text-white' : 'text-gray-900'}`}>
                                    {plan.price}
                                </span>
                                <span class={`text-sm font-semibold leading-6 ${plan.highlighted ? 'text-gray-300' : 'text-gray-600'}`}>
                                    {plan.period}
                                </span>
                            </div>
                            <p class={`mt-4 text-base leading-7 ${plan.highlighted ? 'text-gray-300' : 'text-gray-600'}`}>
                                {plan.description}
                            </p>
                            <ul class={`mt-8 space-y-3 text-base leading-7 ${plan.highlighted ? 'text-gray-300' : 'text-gray-600'}`}>
                                {plan.features.map((feature) => (
                                    <li class="flex gap-x-3">
                                        <svg class={`h-6 w-5 flex-none ${plan.highlighted ? 'text-white' : 'text-indigo-600'}`} viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z" clip-rule="evenodd" />
                                        </svg>
                                        {feature}
                                    </li>
                                ))}
                            </ul>
                        </div>
                        <a
                            href={`/contact-form?plan=${encodeURIComponent(plan.name.toLowerCase())}&price=${encodeURIComponent(plan.price)}`}
                            class={`mt-8 block rounded-md px-3 py-2 text-center text-base font-semibold leading-7 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 
                            ${plan.highlighted 
                                ? 'bg-white text-gray-900 hover:bg-gray-100 focus-visible:outline-white' 
                                : 'bg-indigo-600 text-white hover:bg-indigo-500 focus-visible:outline-indigo-600'
                            }`}
                        >
                            {plan.cta}
                        </a>
                    </div>
                </div>
            ))}
        </div>
    </div>
</section>

<script>
    const pricingPlans = document.querySelectorAll('.pricing-plan');
    
    pricingPlans.forEach(plan => {
        plan.addEventListener('click', () => {
            // Remove highlighted state from all plans
            pricingPlans.forEach(p => {
                p.classList.remove('bg-gray-900', 'ring-gray-900');
                p.classList.add('ring-gray-200');
                
                // Update text colors
                const title = p.querySelector('h3');
                const price = p.querySelector('.text-4xl');
                const period = p.querySelector('.text-sm.font-semibold');
                const description = p.querySelector('p');
                const features = p.querySelectorAll('li');
                const button = p.querySelector('a');
                
                title?.classList.remove('text-white');
                title?.classList.add('text-gray-900');
                price?.classList.remove('text-white');
                price?.classList.add('text-gray-900');
                period?.classList.remove('text-gray-300');
                period?.classList.add('text-gray-600');
                description?.classList.remove('text-gray-300');
                description?.classList.add('text-gray-600');
                features.forEach(feature => {
                    feature.classList.remove('text-gray-300');
                    feature.classList.add('text-gray-600');
                });
                
                // Update button styles
                if (button) {
                    button.classList.remove('bg-white', 'text-gray-900', 'hover:bg-gray-100');
                    button.classList.add('bg-indigo-600', 'text-white', 'hover:bg-indigo-500');
                }
            });
            
            // Add highlighted state to clicked plan
            plan.classList.remove('ring-gray-200');
            plan.classList.add('bg-gray-900', 'ring-gray-900');
            
            // Update text colors for highlighted plan
            const title = plan.querySelector('h3');
            const price = plan.querySelector('.text-4xl');
            const period = plan.querySelector('.text-sm.font-semibold');
            const description = plan.querySelector('p');
            const features = plan.querySelectorAll('li');
            const button = plan.querySelector('a');
            
            title?.classList.remove('text-gray-900');
            title?.classList.add('text-white');
            price?.classList.remove('text-gray-900');
            price?.classList.add('text-white');
            period?.classList.remove('text-gray-600');
            period?.classList.add('text-gray-300');
            description?.classList.remove('text-gray-600');
            description?.classList.add('text-gray-300');
            features.forEach(feature => {
                feature.classList.remove('text-gray-600');
                feature.classList.add('text-gray-300');
            });
            
            // Update button styles
            if (button) {
                button.classList.remove('bg-indigo-600', 'text-white', 'hover:bg-indigo-500');
                button.classList.add('bg-white', 'text-gray-900', 'hover:bg-gray-100');
            }
        });
    });
</script> 